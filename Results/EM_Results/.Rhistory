ncol = 3, byrow = T), stringsAsFactors = F)
### Compute the loglike
llk <- mapply(function(x,y){computeLogLikelihoodForFeature(men_feature_data, women_feature_data,
x$Var1, x$Var2,
y$X1, y$X2, y$X3)}
,split(cart_prod, row(cart_prod))
,split(probs_and_variance_data_frame, row(probs_and_variance_data_frame))
)
llk_results <- rbind(llk_results,
cbind(cart_prod, probs_and_variance_data_frame, llk))
}
names(llk_results) <- c("Theta2", "Theta1", "p", "q", "Sigma2", "llk")
if(!validateConstraints(llk_results, mu)){print("The search is off the grid!")}
### Find MLE per feature
null_hypothesis_llk <-
computeLlkNullHypothesis(mu,men_feature_data, women_feature_data)
### Combine the results of the grid search MLE's
mle <- findMleForFeatureFromGridSearch(llk_results)
data_MLE_per_feature <- rbind(data_MLE_per_feature,
cbind(mle, llk_ratio = mle$llk - null_hypothesis_llk))
}
return(cbind(feature_list, data_MLE_per_feature))
}
mle.per.feature <- computeMLEOverGridMixtureModel(data)
mle.per.feature
plot(mle.per.feature$feature_list, mle.per.feature$llk_ratio)
pexp(mle.per.feature$llk_ratio, 1)
1 - pexp(mle.per.feature$llk_ratio, 1)
pexp(mle.per.feature$llk_ratio, 1)
1 - pexp(mle.per.feature$llk_ratio, 1)
min(1 - pexp(mle.per.feature$llk_ratio, 1))
order(1 - pexp(mle.per.feature$llk_ratio, 1))
sort(1 - pexp(mle.per.feature$llk_ratio, 1))
which.min(1 - pexp(mle.per.feature$llk_ratio, 1))
mle.per.feature[49,]
mle.per.feature[8,]
mle.per.feature$llk_ratio
order(mle.per.feature$llk_ratio)
mle.per.feature[61,]
which.min(mle.per.feature$llk_ratio)
mle.per.feature[3,]
which.max(mle.per.feature$llk_ratio)
mle.per.feature[49,]
order(mle.per.feature$llk_ratio)
order(mle.per.feature$llk_ratio, decreasing = F)
order(mle.per.feature$llk_ratio, decreasing = T)
mle.per.feature[33,]
mle.per.feature[5,]
mle.per.feature[6,]
mle.per.feature[7,]
plot(mle.per.feature$feature_list, mle.per.feature$llk_ratio, type = "p")
mle.per.feature$feature_list
barplot(mle.per.feature,main="Car makes",ylab="Freqency",xlab="make",las=2)
library(ggplot2)
p <- ggplot(mle.per.feature, aes(feature_list, llk_ratio)) + geom_point()
p
p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
mle.per.feature[13,]
mle.per.feature[12,]
mle.per.feature[mle.per.feature$feature_list == "X.12",]
pexp(1.1,1)
qexp(0.95,1)
mle.per.feature[mle.per.feature$feature_list == "X.44",]
main
mle.per.feature
mainFunctionGridSearch <- function(file_name){
data <- read.csv(
file.path("~/mastersdegree/Thesis/DAPHNA_JOEL/Results/EM_Results",
file_name))
mle_per_feature <- computeMLEOverGridMixtureModel(data)
return(cbind(file_name, mle_per_feature))
}
View(findMleForFeatureFromGridSearch)
computeMLEOverGridMixtureModel <- function(data){
feature_list <- names(data)[-1]       ### This is the list of brain feature
by_gender <- splitDataByGender(data)  ### Deviding the data into men and women
data_MLE_per_feature <- data.frame()
for(feature in feature_list){
men_feature_data <- by_gender$men_data[,feature]
women_feature_data <- by_gender$women_data[,feature]
men_parameter <- computeGroupData(men_feature_data)
women_parameter <- computeGroupData(women_feature_data)
llk_results <- data.frame()
mu <- men_parameter$average
step_dir <- mu < 0
theta_2 <- createOuterLoopGrid(mu, step_dir)
for(t_2 in theta_2){
theta_1 <- createInnerLoopGrid(theta_2 = t_2, mu, step_dir)
cart_prod <- expand.grid(t_2, theta_1)
### Compute the parameters
probs_and_variance <- mapply(function(x,y){computeParameters(x,y,mu)},cart_prod$Var1,
cart_prod$Var2,SIMPLIFY = FALSE)
probs_and_variance_array <-lapply(probs_and_variance, function(x){data.frame(
c(x[1], x[2], x[3]))})
probs_and_variance_data_frame <- data.frame(matrix(
unlist(probs_and_variance_array), nrow = length(probs_and_variance_array),
ncol = 3, byrow = T), stringsAsFactors = F)
### Compute the loglike
llk <- mapply(function(x,y){computeLogLikelihoodForFeature(men_feature_data, women_feature_data,
x$Var1, x$Var2,
y$X1, y$X2, y$X3)}
,split(cart_prod, row(cart_prod))
,split(probs_and_variance_data_frame, row(probs_and_variance_data_frame))
)
llk_results <- rbind(llk_results,
cbind(cart_prod, probs_and_variance_data_frame, llk))
}
names(llk_results) <- c("Theta2", "Theta1", "p", "q", "Sigma2", "llk")
if(!validateConstraints(llk_results, mu)){print("The search is off the grid!")}
### Find MLE per feature
null_hypothesis_llk <-
computeLlkNullHypothesis(mu,men_feature_data, women_feature_data)
### Combine the results of the grid search MLE's
mle <- findMleForFeatureFromGridSearch(llk_results)
data_MLE_per_feature <- rbind(data_MLE_per_feature,
cbind(mle,c(mu, -mu), llk_ratio = mle$llk - null_hypothesis_llk))
}
return(cbind(feature_list, data_MLE_per_feature))
}
file.list <- c(
"data_GSP_thickness.csv",
"data_GSP_volume_divide_power.csv",
"data_GSP_volume.csv",
"data_GSP_VBM.csv")
results <- data.frame()
for(file.name in file.list){
res <- mainFunctionGridSearch(file.name)
results <- rbind(results, res)
}
splitDataByGender
debug(computeMLEOverGridMixtureModel)
debug(computeMLEOverGridMixtureModel)
file.list <- c(
"data_GSP_thickness.csv",
"data_GSP_volume_divide_power.csv",
"data_GSP_volume.csv",
"data_GSP_VBM.csv")
results <- data.frame()
for(file.name in file.list){
res <- mainFunctionGridSearch(file.name)
results <- rbind(results, res)
}
splitDataByGender
splitDataByGender(data)
computeGroupData <- function(feature_data_by_gender){
return(list(
average = mean(feature_data_by_gender),
var = var(feature_data_by_gender)
))
}
splitDataByGender <- function(data){
men_data <- data[data[,1] == 1,]
women_data <- data[data[,1] == 2,]
return(list(
men_data = men_data,
women_data = women_data
))
}
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/data_preparation_methods.R', echo=TRUE)
file.list <- c(
"data_GSP_thickness.csv",
"data_GSP_volume_divide_power.csv",
"data_GSP_volume.csv",
"data_GSP_VBM.csv")
results <- data.frame()
for(file.name in file.list){
res <- mainFunctionGridSearch(file.name)
results <- rbind(results, res)
}
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/main_function.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/data_preparation_methods.R', echo=TRUE)
file.list <- c(
"data_GSP_thickness.csv",
"data_GSP_volume_divide_power.csv",
"data_GSP_volume.csv",
"data_GSP_VBM.csv")
results <- data.frame()
for(file.name in file.list){
res <- mainFunctionGridSearch(file.name)
results <- rbind(results, res)
}
undebug(computeMLEOverGridMixtureModel)
results <- data.frame()
for(file.name in file.list){
res <- mainFunctionGridSearch(file.name)
results <- rbind(results, res)
}
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/validate_grid_search_results.R', echo=TRUE)
results
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/data_preparation_methods.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/validate_grid_search_results.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/grid_search_for_two_theta.R', echo=TRUE)
results <- data.frame()
for(file.name in file.list){
res <- mainFunctionGridSearch(file.name)
results <- rbind(results, res)
}
results
any(results$llk_ratio < 0)
plot(1:520 , results$llk_ratio)
hist(results$llk_ratio)
write.csv(results,
file.path("~/mastersdegree/Thesis/DAPHNA_JOEL/Results/EM_Results",
"full_data_results.csv"))
computeLlkNullHypothesis
computeLogLikelihoodForFeature
evaluateLogLikelihoodOFMixtureModel
View(computeLlkNullHypothesis)
computeLlkNullHypothesis <- function(mu,men_feature_data, women_feature_data){
p <- 1
q <- 0
sigma2 <- 1 + mu * - mu
llk <- computeLogLikelihoodForFeature(men_feature_data, women_feature_data, mu, -mu,
p,q,sigma2)
return(llk)
}
data <- read.csv("/home/nitay/mastersdegree/Thesis/DAPHNA_JOEL/Data/"data_GSP_volume.csv"")
data <- read.csv("/home/nitay/mastersdegree/Thesis/DAPHNA_JOEL/Data/data_GSP_volume.csv")
mle.per.feature <- mainFunctionGridSearch("data_GSP_volume.csv")
mle.per.feature
View(mle.per.feature)
ile.list <- c(
"data_GSP_thickness.csv",
"data_GSP_volume_divide_power.csv",
"data_GSP_volume.csv",
"data_GSP_VBM.csv")
results <- data.frame()
for(file.name in file.list){
res <- mainFunctionGridSearch(file.name)
results <- rbind(results, res)
}
write.csv(results,
file.path("~/mastersdegree/Thesis/DAPHNA_JOEL/Results/EM_Results",
"full_data_results.csv"))
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/source_script_grid_search.R', echo=TRUE)
linux.path <- "~/MastersDegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/"
file.names <- c("compute_llk_under_null_hypothesis.R", "compute_mle_for_feature.R",
"compute_parameters_for_features.R", "data_preparation_methods.R",
"find_mle_from_grid_search_results.R", "grid_search_methods.R",
"validate_grid_search_results.R")
linux.path <- "~/MastersDegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/"
file.names <- c("compute_llk_under_null_hypothesis.R", "compute_mle_for_feature.R",
"compute_parameters_for_features.R", "data_preparation_methods.R",
"find_mle_from_grid_search_results.R", "grid_search_methods.R",
"validate_grid_search_results.R")
for(file in file.names){
source(file.path(linux.path, file))
}
linux.path <- "~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/"
file.names <- c("compute_llk_under_null_hypothesis.R", "compute_mle_for_feature.R",
"compute_parameters_for_features.R", "data_preparation_methods.R",
"find_mle_from_grid_search_results.R", "grid_search_methods.R",
"validate_grid_search_results.R")
for(file in file.names){
source(file.path(linux.path, file))
}
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/MockData/sample_mock_data.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/MockData/compute_MLE_for_mock_data.R', echo=TRUE)
computeMLEAndLlkRatioUnderHypothesis <- function(n,mu,p,q,m){
llk_ratio <- c()
for(i in 1:n){
sample <- sampleMockData(mu,-mu,p,q,0.998,m)
validation <- validateSample(sample$men, sample$women)
MLE_results <- computeMLEOverGridMockData(sample)
llk_ratio <- c(llk_ratio, MLE_results$llk_ratio)
}
return(list(
llk_ratio = llk_ratio,
p_value = exp(-llk_ratio)
))
}
computeMLEAndLlkRatioUnderHypothesis <- function(n,mu,p,q,m){
llk_ratio <- c()
for(i in 1:n){
sample <- sampleMockData(mu,-mu,p,q,0.998,m)
validation <- validateSample(sample$men, sample$women)
MLE_results <- computeMLEOverGridMockData(sample)
llk_ratio <- c(llk_ratio, MLE_results$llk_ratio)
}
return(list(
llk_ratio = llk_ratio,
p_value = exp(-llk_ratio)
))
}
computeMLEAndLlkRatioUnderHypothesis <- function(n,mu,p,q,m, just_sample = F){
if(just_sample){
return(sample <- sampleMockData(mu,-mu,p,q,0.998,m))
}
llk_ratio <- c()
for(i in 1:n){
sample <- sampleMockData(mu,-mu,p,q,0.998,m)
validation <- validateSample(sample$men, sample$women)
MLE_results <- computeMLEOverGridMockData(sample)
llk_ratio <- c(llk_ratio, MLE_results$llk_ratio)
}
return(list(
llk_ratio = llk_ratio,
p_value = exp(-llk_ratio)
))
}
pure.men <- computeMLEAndLlkRatioUnderHypothesis(100, 0.2, 1, 0, 2000, T)
pure.men
pure <- computeMLEAndLlkRatioUnderHypothesis(100, 0.2, 1, 0, 2000, T)
plot(density(pure$men), col = 1)
lines(density(pure$women), col = 2)
abline(v = 0.2, col = "green")
abline(v = -0.2, col = "green")
validateSample(pure$men, pure$women)
computeMLEAndLlkRatioUnderHypothesis <- function(n,mu,p,q,m, just_sample = F){
sigma_2 <- 1 + mu * -mu
if(just_sample){
return(sample <- sampleMockData(mu,-mu,p,q,sigma_2,m))
}
llk_ratio <- c()
for(i in 1:n){
sample <- sampleMockData(mu,-mu,p,q,sigma_2,m)
validation <- validateSample(sample$men, sample$women)
MLE_results <- computeMLEOverGridMockData(sample)
llk_ratio <- c(llk_ratio, MLE_results$llk_ratio)
}
return(list(
llk_ratio = llk_ratio,
p_value = exp(-llk_ratio)
))
}
pure <- computeMLEAndLlkRatioUnderHypothesis(100, 0.2, 1, 0, 2000, T)
validateSample(pure$men, pure$women)
pure <- computeMLEAndLlkRatioUnderHypothesis(100, 0.1, 1, 0, 2000, T)
validateSample(pure$men, pure$women)
plot(density(pure$men), col = 1)
lines(density(pure$women), col = 2)
abline(v = 0.1, col = "green")
abline(v = -0.1, col = "green")
mean(pure$men)
mean(pure$women)
summary(pure$men)
summary(pure$women)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/MockData/sample_mock_data.R', echo=TRUE)
pure <- computeMLEAndLlkRatioUnderHypothesis(100, 0.1, 1, 0, 2000, T)
validateSample(pure$men, pure$women)
plot(density(pure$men), col = 1)
lines(density(pure$women), col = 2)
abline(v = 0.1, col = "green")
abline(v = -0.1, col = "green")
summary(pure$men)
summary(pure$women)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/MockData/EDA_of_mock_data.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/source_script_grid_search.R', echo=TRUE)
dataEDA <- function(pop){
validateSample(pop$men, pop$women)
plot(density(pop$men), col = 1)
lines(density(pop$women), col = 2)
abline(v = 0.1, col = "green")
abline(v = -0.1, col = "green")
summary(pop$men)
summary(pop$women)
}
pure <- computeMLEAndLlkRatioUnderHypothesis(100, 0.1, 1, 0, 2000, T)
dataEDA(pure)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/EDA_of_mock_data.R', echo=TRUE)
dataEDA(pure)
dataEDA(pure)
pure <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.1, 1, 0, 2000, T)
dataEDA(pure)
mix <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.1, 0.6, 0.4, 2000, T)
dataEDA(mix)
results.alternative <- computeMLEAndLlkRatioUnderHypothesis(10, 0.2, 0.6, 0.4, 2000)
results.null <- computeMLEAndLlkRatioUnderHypothesis(10, 0.2, 1, 0, 2000)
hist(results.null$llk_ratio, breaks = 50, col = "blue")
hist(results.alternative$llk_ratio, breaks = 50, col = "red", add = T)
hist(results.alternative$p_value,col = "blue")
hist(results.null$p_value, col = "red", add = T)
hist(results.alternative$p_value,col = "blue")
hist(results.null$p_value, col = "red", add = T)
results.alternative$p_value
results.null$p_value
pure <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.2, 1, 0, 2000, T)
dataEDA(pure)
mix <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.2, 0.6, 0.4, 2000, T)
dataEDA(mix)
results.alternative <- computeMLEAndLlkRatioUnderHypothesis(100, 0.2, 0.6, 0.4, 2000)
results.null <- computeMLEAndLlkRatioUnderHypothesis(100, 0.2, 1, 0, 2000)
hist(results.null$llk_ratio, breaks = 50, col = "blue")
hist(results.alternative$llk_ratio, breaks = 50, col = "red", add = T)
hist(results.null$p_value)
hist(results.alternative$p_value,col = "blue")
hist(results.null$p_value, col = "red", add = T)
dataEDA(pure)
mix <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.2, 0.6, 0.4, 2000, T)
dataEDA(mix)
computeMLEAndLlkRatioUnderHypothesis <- function(n,mu,p,q,m, just_sample = F){
sigma_2 <- 1 + mu * -mu
if(just_sample){
sample <- sampleMockData(mu,-mu,p,q,sigma_2,m)
return(list(
EDA = dataEda(sample),
MLE_results = computeMLEOverGridMockData(sample)
))
}
llk_ratio <- c()
for(i in 1:n){
sample <- sampleMockData(mu,-mu,p,q,sigma_2,m)
validation <- validateSample(sample$men, sample$women)
MLE_results <- computeMLEOverGridMockData(sample)
llk_ratio <- c(llk_ratio, MLE_results$llk_ratio)
}
return(list(
llk_ratio = llk_ratio,
p_value = exp(-llk_ratio)
))
}
pure <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.2, 1, 0, 2000, T)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/EDA_of_mock_data.R', echo=TRUE)
computeMLEAndLlkRatioUnderHypothesis <- function(n,mu,p,q,m, just_sample = F){
sigma_2 <- 1 + mu * -mu
if(just_sample){
sample <- sampleMockData(mu,-mu,p,q,sigma_2,m)
return(list(
EDA = dataEDA(sample),
MLE_results = computeMLEOverGridMockData(sample)
))
}
llk_ratio <- c()
for(i in 1:n){
sample <- sampleMockData(mu,-mu,p,q,sigma_2,m)
validation <- validateSample(sample$men, sample$women)
MLE_results <- computeMLEOverGridMockData(sample)
llk_ratio <- c(llk_ratio, MLE_results$llk_ratio)
}
return(list(
llk_ratio = llk_ratio,
p_value = exp(-llk_ratio)
))
}
pure <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.2, 1, 0, 2000, T)
mix <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.2, 0.6, 0.4, 2000, T)
pure$EDA
pure$EDA
pure$MLE_results
pure$MLE_results
mix$EDA
mix$MLE_results
computeMLEAndLlkRatioUnderHypothesis <- function(m,mu,p,q,n, just_sample = F){
sigma_2 <- 1 + mu * -mu
if(just_sample){
sample <- sampleMockData(mu,-mu,p,q,sigma_2,m)
return(list(
EDA = dataEDA(sample),
MLE_results = computeMLEOverGridMockData(sample)
))
}
llk_ratio <- c()
for(i in 1:n){
sample <- sampleMockData(mu,-mu,p,q,sigma_2,m)
validation <- validateSample(sample$men, sample$women)
MLE_results <- computeMLEOverGridMockData(sample)
llk_ratio <- c(llk_ratio, MLE_results$llk_ratio)
}
return(list(
llk_ratio = llk_ratio,
p_value = exp(-llk_ratio)
))
}
pure <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.2, 1, 0, 2000, T)
pure$EDA
pure$MLE_results
mix <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.2, 0.6, 0.4, 2000, T)
mix$EDA
mix$MLE_results
hist(results.null$llk_ratio, breaks = 70,
col = "blue", main = "histogram of llk_ratio" )
hist(results.alternative$llk_ratio, breaks = 70, col = "red", add = T)
hist(results.alternative$p_value, breaks = 50, col = "blue",
main = "histogram of p_value")
hist(results.null$p_value, breaks = 50, col = "red", add = T)
pure$EDA
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/EDA_of_mock_data.R', echo=TRUE)
computeMLEAndLlkRatioUnderHypothesis <- function(m,mu,p,q,n, just_sample = F){
sigma_2 <- 1 + mu * -mu
if(just_sample){
sample <- sampleMockData(mu,-mu,p,q,sigma_2,m)
return(list(
EDA = dataEDA(sample),
MLE_results = computeMLEOverGridMockData(sample)
))
}
llk_ratio <- c()
for(i in 1:n){
sample <- sampleMockData(mu,-mu,p,q,sigma_2,m)
validation <- validateSample(sample$men, sample$women)
MLE_results <- computeMLEOverGridMockData(sample)
llk_ratio <- c(llk_ratio, MLE_results$llk_ratio)
}
return(list(
llk_ratio = llk_ratio,
p_value = exp(-llk_ratio)
))
}
pure <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.2, 1, 0, 2000, T)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/Methods/EDA_of_mock_data.R', echo=TRUE)
pure <- computeMLEAndLlkRatioUnderHypothesis(10000, 0.2, 1, 0, 2000, T)
View(dataEDA)
View(computeMLEOverGridMixtureModel)
View(computeLogLikelihoodForFeature)
View(sampleMockData)
View(dataEDA)
View(sampleMockData)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/MockData/sample_mock_data.R', echo=TRUE)
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/MockData/compute_MLE_for_mock_data.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/MockData/compute_MLE_for_mock_data.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/source_script_grid_search.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Grid_search/MockData/sample_mock_data.R', echo=TRUE)
