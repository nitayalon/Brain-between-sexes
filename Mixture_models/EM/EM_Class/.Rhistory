),
validity = checkBrainDataFileValidity
)
gsp_vbm_data <- new(brainFile(name = "GSP_VBM_data.xlsx",
target_dir = "~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/",
destination_dir = " "
))
gsp_vbm_data <- new(brainFile(name = "GSP_VBM_data.xlsx",
target_dir = "~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/"
))
gsp_vbm_data <- new(brainFile(name = "GSP_VBM_data.xlsx"
))
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/check_brain_data_file_validity.R', echo=TRUE)
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/check_brain_data_file_validity.R', echo=TRUE)
gsp_vbm_data <- new(brainFile(name = "GSP_VBM_data.xlsx",
target_dir = "~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/"
))
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/brain_file_class.R', echo=TRUE)
gsp_vbm_data <- new(brainFile(name = "GSP_VBM_data.xlsx",
target_dir = "~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/"
))
### Testing brain file class:
gsp_vbm_data <- new(brainFile(name = "GSP_VBM_data.xlsx",
target_dir = "~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/"
))
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/check_brain_data_file_validity.R', echo=TRUE)
gsp_vbm_data <- new(brainFile(name = "GSP_VBM_data.xlsx",
target_dir = "~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/"
))
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/brain_file_class.R', echo=TRUE)
### Testing brain file class:
gsp_vbm_data <- new(brainFile(name = "GSP_VBM_data.xlsx",
target_dir = "~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/"
))
gsp_vbm_data <- new(brainFile(name = "GSP_VBM_data.xlsx",
target_dir = "~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/"
))
View(check_brain_feature_data_validity)
View(checkBrainDataFileValidity)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/check_brain_data_file_validity.R', echo=TRUE)
gsp_vbm_data <- new(brainFile(name = "GSP_VBM_data.xlsx",
target_dir = "~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/"
))
gsp_vbm_data <- new(brainFile())
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/check_brain_data_file_validity.R', echo=TRUE)
gsp_vbm_data <- new("brainFile", name = "GSP_VBM_data.xlsx",
target_dir = "~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/"
))
### Testing brain file class:
gsp_vbm_data <- new("brainFile",
name = "GSP_VBM_data.xlsx",
target_dir = "~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/")
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_dictionary.R', echo=TRUE)
gsp_vbm_data_with_dict <- loadBrainDictionaryFile(gsp_vbm_data)
gsp_vbm_data@name
gsp_vbm_data_with_dict <- loadBrainDictionaryFile(gsp_vbm_data,gsp_vbm_data@name )
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data,gsp_vbm_data@name )
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
cat(path_to_file, "\n")
if(!(exists(path_to_file)))
{
cat("No file found","\n")
return(NULL)
}
theObject@name <- file_name
data_file <- read.xls(path_to_file,sheet = 1,header = T)
if(tolower(names(data_file)) %>% grep("sex",.) ||
names(data_file) %>% grep("bio_sex",.))
{
theObject@brain_file <- data_file
}
else
{
gender_data <- theObject@dictionary[,c("Subject_ID","Sex")]
full_data <- merge(gender_data,data_file)
theObject@brain_file <-full_data
}
check_brain_feature_data_validity(theObject)
return(theObject)
}
)
# Get
setGeneric(name = "getRawBrainFileData",
def = function(theObject)
{
standardGeneric("getRawBrainFileData")
}
)
setMethod(f = "getRawBrainFileData",
signature = "brainFile",
definition = function(theObject)
{
return(theObject@brain_file)
}
)
setGeneric(name = "getBrainFileName",
def = function(theObject)
{
standardGeneric("getBrainFileName")
}
)
setMethod(f = "getBrainFileName",
signature = "brainFile",
definition = function(theObject)
{
return(theObject@name)
}
)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data,gsp_vbm_data@name )
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data,gsp_vbm_data@name )
file.exists("~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/GSP_VBM_data.xlsx
No file found ")
file.exists("~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/GSP_VBM_data.xlsx")
gsp_vbm_data@target_dir
gsp_vbm_data@name
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data,gsp_vbm_data@name)
file.exists("~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/GSP_VBM_data.xlsx ")
file.exists("~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/GSP_VBM_data.xlsx")
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data,gsp_vbm_data@name)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data,gsp_vbm_data@name)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data)
cat("nitay")
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data)
file.exists("~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/Unified_Data/GSP_VBM_data.xlsx")
paste0(gsp_vbm_data@target_dir,gsp_vbm_data@name)
file.exists(paste0(gsp_vbm_data@target_dir,gsp_vbm_data@name))
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data)
file.exists(paste0(gsp_vbm_data@target_dir,gsp_vbm_data@name))
exists(paste0(gsp_vbm_data@target_dir,gsp_vbm_data@name))
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_dictionary.R', echo=TRUE)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
install.packages("gdata")
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data)
check_brain_feature_data_validity
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_file_class/load_brain_data_from_file.R', echo=TRUE)
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data)
getRawBrainFileData(gsp_vbm_data_with_data)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/brain_feature_data_validation.R', echo=TRUE)
class(gsp_vbm_data_with_data)
class(gsp_vbm_data_with_data) == "brainFile"
names(getRawBrainFileData(gsp_vbm_data_with_data))
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/load_brain_feature_data_from_file.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/brain_feature_data.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/brain_feature_data_validation.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/load_brain_feature_data_from_file.R', echo=TRUE)
names(getRawBrainFileData(gsp_vbm_data_with_data))
Precentral_R_data <- new("brainFeatureData")
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data,"Precentral_R_data")
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/load_brain_feature_data_from_file.R', echo=TRUE)
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data,"Precentral_R_data")
("Precentral_R_data" %in% names(getRawBrainFileData(gsp_vbm_data_with_data)))
names(getRawBrainFileData(gsp_vbm_data_with_data))
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data,"Precentral_R")
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/load_brain_feature_data_from_file.R', echo=TRUE)
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data,"Precentral_R")
gsp_vbm_data
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data_with_data,"Precentral_R")
gsp_vbm_data_with_data
gsp_vbm_data_with_data <- loadBrainDataFile(gsp_vbm_data_with_dict)
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data_with_data,"Precentral_R")
class(gsp_vbm_data_with_data) == "brainFile"
showMethods(brainFile)
showMethods(class = "brainFile")
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/load_brain_feature_data_from_file.R', echo=TRUE)
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data_with_data,"Precentral_R")
Precentral_R_data
new("brainFeatureData")
Precentral_R_data <- new("brainFeatureData")
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data_with_data,"Precentral_R")
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data_with_data,"Precentral_R")
getRawBrainFileData(brain_file_class)
subset(getRawBrainFileData(brain_file_class),
select = c(bio_sex,feature_name))
feature_data <- subset(getRawBrainFileData(brain_file_class),
select = c(bio_sex))
feature_name
eval("subset(getRawBrainFileData(brain_file_class),
select = c(bio_sex,feature_name))")
eval(parse("subset(getRawBrainFileData(brain_file_class),
select = c(bio_sex,feature_name))"))
df <- getRawBrainFileData(brain_file_class)
eval(parse("subset(df,
select = c(bio_sex,feature_name))"))
subset(getRawBrainFileData(brain_file_class),
select = c("bio_sex",feature_name))
feature_data <- subset(getRawBrainFileData(brain_file_class),
select = c("bio_sex",feature_name))
theObject@value <- feature_data
checkBrainFeatureDataValidity(theObject)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/load_brain_feature_data_from_file.R', echo=TRUE)
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data_with_data,"Precentral_R")
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/load_brain_feature_data_from_file.R', echo=TRUE)
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data_with_data,"Precentral_R")
Precentral_R_data
Precentral_R_data <- applyLogTransformationOnBrainFeatureData(Precentral_R_data)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/apply_log_transformation_on_brain_feature_data.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/apply_scaling_on_brain_feature_data.R', echo=TRUE)
Precentral_R_data <- applyLogTransformationOnBrainFeatureData(Precentral_R_data)
names(Precentral_R_data)
slotNames(Precentral_R_data)
slot(Precentral_R_data)
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data_with_data,"Precentral_R")
Precentral_R_data <- new("brainFeatureData")
Precentral_R_data <- loadBrainFeatureData(Precentral_R_data,gsp_vbm_data_with_data,"Precentral_R")
Precentral_R_data_log <- applyLogTransformationOnBrainFeatureData(Precentral_R_data)
slotNames(Precentral_R_data)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/apply_log_transformation_on_brain_feature_data.R', echo=TRUE)
Precentral_R_data_log <- applyLogTransformationOnBrainFeatureData(Precentral_R_data)
Precentral_R_data_log
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/apply_scaling_on_brain_feature_data.R', echo=TRUE)
Precentral_R_data_log_ <- applyScalingOnBrainFeatureData(Precentral_R_data_log)
applyScalingOnBrainFeatureData(Precentral_R_data_log)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/brain_feature_data.R', echo=TRUE)
Precentral_R_data_log_ <- applyScalingOnBrainFeatureData(Precentral_R_data_log)
Precentral_R_data_log_
library(ggplot2)
Precentral_R_data_log_@value
ggplot(Precentral_R_data_log_@value, aes(Precentral_R, fill = bio_sex)) +
geom_histogram()
ggplot(Precentral_R_data_log_@value, aes(Precentral_R, fill = factor(bio_sex))) +
geom_histogram(bins = 50)
ggplot(Precentral_R_data_log_@logged_value, aes(Precentral_R, fill = factor(bio_sex))) +
geom_histogram(bins = 50)
ggplot(Precentral_R_data_log_@scaled_value, aes(Precentral_R, fill = factor(bio_sex))) +
geom_histogram(bins = 50)
Precentral_R_data_log_@scaled_value
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/apply_scaling_on_brain_feature_data.R', echo=TRUE)
Precentral_R_data_log_ <- applyScalingOnBrainFeatureData(Precentral_R_data_log)
ggplot(Precentral_R_data_log_@scaled_value, aes(Precentral_R, fill = factor(bio_sex))) +
geom_histogram(bins = 50)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/brain_feature_data.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/apply_scaling_on_brain_feature_data.R', echo=TRUE)
Precentral_R_data_log_ <- applyScalingOnBrainFeatureData(Precentral_R_data_log)
ggplot(Precentral_R_data_log_@scaled_value, aes(Precentral_R, fill = factor(bio_sex))) +
geom_histogram(bins = 50)
ggplot(Precentral_R_data_log_@scaled_value, aes(value, fill = factor(bio_sex))) +
geom_histogram(bins = 50)
Precentral_R_data_log_@name
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/plot_brain_feature.R', echo=TRUE)
plotBrainFeature(Precentral_R_data_log_,T)
p <- plotBrainFeature(Precentral_R_data_log_,T)
p$natural
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/plot_brain_feature.R', echo=TRUE)
p <- plotBrainFeature(Precentral_R_data_log_,T)
p <- plotBrainFeature(Precentral_R_data_log_,F)
non_log <- ggplot(theObject@value, aes(theObject@name,
fill = factor(bio_sex))) +
geom_histogram(bins = 50)
non_log
theObject@value
theObject@name
non_log
non_log <- ggplot(theObject@value, aes(names(theObject@value)[1],
fill = factor(bio_sex))) +
geom_histogram(bins = 50)
non_log
names(theObject@value)[1]
names(theObject@value)[2]
non_log <- ggplot(theObject@value, aes(names(theObject@value)[2],
fill = factor(bio_sex))) +
geom_histogram(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes(Precentral_R,
fill = factor(bio_sex))) +
geom_histogram(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes_string(theObject@name,
fill = factor("bio_sex"))) +
geom_histogram(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
fill = factor("bio_sex"))) +
geom_histogram(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
fill = factor(bio_sex))) +
geom_histogram(bins = 50)
non_log <- ggplot(theObject@value, aes_string(x = names(theObject@value)[2],
fill = factor(names(theObject@value)[1]))) +
geom_histogram(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes_string(x = names(theObject@value)[2],
fill = names(theObject@value)[1])) +
geom_histogram(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes_string(x = theObject@name)) +
geom_histogram(bins = 50, fill = factor(bio_sex))
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
fill = factor(bio_sex))) +
geom_histogram(bins = 50)
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
fill = factor("bio_sex"))) +
geom_histogram(bins = 50)
non_log
theObject@value
sapply(theObject@value,class)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/apply_scaling_on_brain_feature_data.R', echo=TRUE)
Precentral_R_data_log_ <- applyScalingOnBrainFeatureData(Precentral_R_data_log)
p <- plotBrainFeature(Precentral_R_data_log_,F)
non_log
theObject@name
factor("bio_sex")
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
y = "bio_sex")) +
geom_histogram(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
fill = "bio_sex")) +
geom_histogram(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
fill = "bio_sex")) +
geom_point(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
y = "bio_sex")) +
geom_point(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
y = "bio_sex")) +
geom_histogram(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
fill = "bio_sex")) +
geom_histogram(bins = 50)
non_log
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
fill = "bio_sex")) +
geom_bar(stat="identity", position="dodge")
non_log
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
fill = "bio_sex")) +
geom_histogram(bins = 50)
non_log
levels(theObject@value$bio_sex)
class(theObject@value$bio_sex)
theObject@value$bio_sex <- factor(theObject@value$bio_sex)
non_log <- ggplot(theObject@value, aes_string(x = theObject@name,
fill = "bio_sex")) +
geom_histogram(bins = 50)
non_log
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/plot_brain_feature.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/plot_brain_feature.R', echo=TRUE)
p <- plotBrainFeature(Precentral_R_data_log_,F)
p$natural
p$logged
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/plot_brain_feature.R', echo=TRUE)
p <- plotBrainFeature(Precentral_R_data_log_,F)
p <- plotBrainFeature(Precentral_R_data_log_,F)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/brain_feature_class/plot_brain_feature.R', echo=TRUE)
p <- plotBrainFeature(Precentral_R_data_log_,F)
p$natural
p$logged
loadBrainDictionaryFile
EM
setwd("~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class")
checkEMValidity <- function(object)
{
errors <- character()
if(length(errors) == 0) TRUE else errors
}
setwd("~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class")
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/apply_EM_algorithm_on_brain_data.R', echo=TRUE)
setwd("~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class")
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/source_EM_class.R', echo=TRUE)
setMethod(f = "loadBrainDataForEM",
signature = "EM",
definition = function(theObject,data_file)
{
if(class(data_file) != "data,frame")
{
cat("data file isn't a data.frame", "\n")
return(theObject)
}
theObject@data_file <- data_file
checkBrainFeatureDataValidity(theObject)
return(theObject)
}
)
signature = "EM",
definition = function(theObject,data_file)
{
if(class(data_file) != "data,frame")
{
cat("data file isn't a data.frame", "\n")
return(theObject)
}
theObject@data_file <- data_file
checkBrainFeatureDataValidity(theObject)
return(theObject)
}
)
# Get
setGeneric(name = "getEMDataFile",
def = function(theObject)
{
standardGeneric("getEMDataFile")
}
)
setMethod(f = "getEMDataFile",
signature = "EM",
definition = function(theObject)
{
return(theObject@data_file)
}
)
log_noraml_grid_search_results <- new("EM")
loadBrainDataForEM
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/set_name_EM_Class.R', echo=TRUE)
createEMClassForFeature <- function(feature_name,log_applied = T, feature_data)
{
log_noraml_grid_search_results <- new("EM")
log_noraml_grid_search_results <- setEMName("EM",brain_feature_name,log_applied)
log_noraml_grid_search_results <- loadBrainDataForEM(log_noraml_grid_search_results,
feature_data)
log_noraml_grid_search_results <- applyEMAlgorithmOnBrainData(log_noraml_grid_search_results)
return(log_noraml_grid_search_results)
}
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM/EM_for_gender_mixture_model.R', echo=TRUE)
warnings()
mainFunctionForGenderMixtureModel
source("~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/source_EM_class.R")
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/load_brain_data_for_EM.R', echo=TRUE)
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/load_brain_data_for_EM.R', echo=TRUE)
source("~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/source_EM_class.R")
source("~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/source_file_EM.R")
source("~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/main_function_for_gender_mixture_model.R")
# Remove columns name
sourceAll("~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/Log_normal_mixture_model/data_processing_methods/")
source("~/mastersdegree/Thesis/DAPHNA_JOEL/Data/Full_Data/read_data_from_excel_file.R")
sourceAll("~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/Log_normal_mixture_model/Grid_Search/llk_computation/")
source("~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/source_brain_feature_class.R")
source("~/mastersdegree/Thesis/DAPHNA_JOEL/Data/brain_data_class/source_brain_file_class.R")
source("~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/source_EM_class.R")
View(mainFunctionForGenderMixtureModel)
View(runEMForLogNormalMixtureModel)
View(EMForGenderMixtureModel)
View(createEMClassForFeature)
View(applyLogAndStandrtization)
View(fullMLEAndLlrtForFeature)
View(doubleDoubleEM)
View(logNormalGridLlkComputation)
View(logNormalNullLlkComputation)
View(mainFunctionForGenderMixtureModel)
View(runEMForLogNormalMixtureModel)
View(EMForGenderMixtureModel)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM/EM_for_gender_mixture_model.R', echo=TRUE)
mainFunctionForGenderMixtureModel()
View(computePooledVariance)
tst <- new("EM")
setEMName(tst,"abc",T)
debug(setEMName)
setEMName(tst,"abc",T)
paste("feature_name", as.character(T), sep = "_")
is.character(paste("feature_name", as.character(T), sep = "_"))
setEMName
getEMName(tst)
setEMName(tst,"abc",T)
theObject@name
theObject@name == " "
debugSource('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/set_name_EM_Class.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/load_brain_data_for_EM.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/apply_EM_algorithm_on_brain_data.R', echo=TRUE)
setEMName(tst,"abc",T)
getEMName(tst)
tst <- new("EM")
tst <- setEMName(tst,"abc",T)
getEMName(tst)
mainFunctionForGenderMixtureModel()
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/EM_main_class.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/EM_main_class.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/EM_main_class.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/EM_main_class.R', echo=TRUE)
mainFunctionForGenderMixtureModel()
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/create_EM_Class_For_Feature.R', echo=TRUE)
mainFunctionForGenderMixtureModel()
brain_feature_name
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/create_EM_Class_For_Feature.R', echo=TRUE)
mainFunctionForGenderMixtureModel()
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/create_EM_Class_For_Feature.R', echo=TRUE)
mainFunctionForGenderMixtureModel()
feature_name
log_applied
setEMName("EM",feature_name,log_applied)
log_noraml_grid_search_results <- setEMName(log_noraml_grid_search_results,feature_name,log_applied)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM_Class/create_EM_Class_For_Feature.R', echo=TRUE)
mainFunctionForGenderMixtureModel()
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM/double_double_EM.R', echo=TRUE)
mainFunctionForGenderMixtureModel()
setequal(names(observations),c("men","women"))
createEMClassForFeature
sfullMLEAndLlrtForFeature
fullMLEAndLlrtForFeature
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM/double_double_EM.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM/EM_for_gender_mixture_model.R', echo=TRUE)
source('~/mastersdegree/Thesis/DAPHNA_JOEL/Mixture_models/EM/EM/double_double_EM.R', echo=TRUE)
